#test kwdikas, den kanei swsta ta range queries gia education O_O
import pandas as pd

class KDNode:
    def __init__(self, data, left=None, right=None):
        self.data = data
        self.left = left
        self.right = right

class KdTree:
    def __init__(self, points, depth=0):
        if not points:
            self.root = None
        else:
            k = len(points[0][1]) if isinstance(points[0][1], (list, tuple)) else 1
            axis = depth % k
            points.sort(key=lambda x: x[1][axis] if isinstance(x[1], (list, tuple)) else x[1])
            median = len(points) // 2
            self.root = KDNode(points[median])
            self.root.left = KdTree(points[:median], depth + 1).root
            self.root.right = KdTree(points[median + 1:], depth + 1).root

def convert_to_list(value):
    return [int(val) for val in str(value)[1:-1].split(', ')] if pd.notna(value) and str(value).startswith('[') else [int(value)]

# Load data from CSV
data = pd.read_csv('computer_scientists_data.csv')
scientist_data = [(row['Surname'], (row['#Awards'],), convert_to_list(row['DBLP']), [val.strip(" '") for val in str(row['Education'])[1:-1].split(', ')] if pd.notna(row['Education']) and str(row['Education']).startswith('[') else [row['Education']]) for _, row in data.iterrows()]

# Build k-d tree on fields (Surname, #Awards, #DBLP_Record)
kdtree = KdTree(scientist_data)

def range_query(node, results):
    if node is not None:
        try:
            education_list = [val.strip(" '") for val in node.data[3]]
        except ValueError:
            print(f"Skipping node at depth due to non-list value for education")
            return

        if 'A' <= node.data[0][0].upper() <= 'G' and node.data[1][0] > 4 and 100 <= int(node.data[2][0]) <= 200 and len(set(education_list) & set(node.data[3])) > 0:
            results.append(node.data)

        range_query(node.left, results)
        range_query(node.right, results)

result = []
range_query(kdtree.root, result)

with open('kd_tree_results_2.txt', 'w') as file:
    file.write("Surname: , #Awards: , #DBLP: , Education:\n")
    for item in result:
        file.write(f"{item[0]}, {item[1]}, {item[2]}, {item[3]}\n")

print("Results written to kd_tree_results_2.txt")
